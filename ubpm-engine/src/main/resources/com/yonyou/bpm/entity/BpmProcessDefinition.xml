<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
  
<mapper namespace="com.yonyou.engine.impl.persistence.entity.ProcessDefinitionEntity">
  <!-- PROCESSDEFINITION RESULTMAP -->

  <resultMap id="bpmprocessDefinitionResultMap" type="org.activiti.engine.impl.persistence.entity.ProcessDefinitionEntity">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="revision" column="REV_" />
    <result property="category" column="CATEGORY_" />
    <result property="name" column="NAME_" />
    <result property="key" column="KEY_" jdbcType="VARCHAR" />
    <result property="version" column="VERSION_" jdbcType="INTEGER"/>
    <result property="deploymentId" column="DEPLOYMENT_ID_" jdbcType="VARCHAR"/>
    <result property="resourceName" column="RESOURCE_NAME_" jdbcType="VARCHAR"/>
    <result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR" />
    <result property="diagramResourceName" column="DGRM_RESOURCE_NAME_" jdbcType="VARCHAR"/>
    <result property="description" column="DESCRIPTION_" jdbcType="VARCHAR" />
    <result property="hasStartFormKey" column="HAS_START_FORM_KEY_" jdbcType="BOOLEAN"/>
    <result property="suspensionState" column="SUSPENSION_STATE_" jdbcType="INTEGER"/>
  </resultMap>

  <!-- PROCESSDEFINITION SELECT -->

  <select id="bpmSelectProcessDefinitionsByQueryCriteria" parameterType="com.yonyou.bpm.engine.impl.BpmProcessDefinitionQueryImpl" resultMap="bpmprocessDefinitionResultMap">
  	${limitBefore}
    select RES.* ${limitBetween}
    <include refid="bpmSelectProcessDefinitionsByQueryCriteriaSql"/>
    ${orderBy}
    ${limitAfter}
  </select>

  <select id="bpmSelectProcessDefinitionCountByQueryCriteria" parameterType="com.yonyou.bpm.engine.impl.BpmProcessDefinitionQueryImpl" resultType="long">
    select count(RES.ID_)
    <include refid="bpmSelectProcessDefinitionsByQueryCriteriaSql"/>
  </select>
  
  <sql id="bpmSelectProcessDefinitionsByQueryCriteriaSql">  
    from ${prefix}ACT_RE_PROCDEF RES
    <if test="eventSubscriptionType != null">
    	inner join ${prefix}ACT_RU_EVENT_SUBSCR EVT on RES.ID_ = EVT.CONFIGURATION_
    </if>
    <where>
      <if test="id != null">
        RES.ID_ = #{id}
      </if>
      <if test="categoryIds != null &amp;&amp; categoryIds.size() &gt; 0">
     	 and  RES.DEPLOYMENT_ID_ in (
         select DEPLOYMENT.ID_ from ACT_RE_DEPLOYMENT DEPLOYMENT where DEPLOYMENT.CATEGORY_ in(
             select CAT.ID_ from BPM_CAT_CATEGORY CAT 
             <where>
              	and CAT.ID_ in
      			<foreach collection="categoryIds" item="item" open="("  close=")" separator=",">
    			#{item} 
    			</foreach>
             </where>
             )
         )
      </if>
      <if test="deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0">
        and RES.DEPLOYMENT_ID_ in
      	<foreach collection="deploymentIds" item="item" open="("  close=")" separator=",">
    		#{item} 
    	</foreach>
     </if>
       <if test="applicationIds != null">
         and  RES.DEPLOYMENT_ID_ in (
         select DEPLOYMENT.ID_ from ACT_RE_DEPLOYMENT DEPLOYMENT where DEPLOYMENT.CATEGORY_ in(
             select CAT.ID_ from BPM_CAT_CATEGORY CAT 
             <where>
              	and CAT.APPLICATION_ in
      			<foreach collection="applicationIds" item="item" open="("  close=")" separator=",">
    			#{item} 
    			</foreach>
             </where>
             )
         )
      </if>
      <if test="applicationId != null">
         and  RES.DEPLOYMENT_ID_ in (
         select DEPLOYMENT.ID_ from ACT_RE_DEPLOYMENT DEPLOYMENT where DEPLOYMENT.CATEGORY_ in(
             select CAT.ID_ from BPM_CAT_CATEGORY CAT 
             <where>
              	and CAT.APPLICATION_ =#{applicationId}
             </where>
             )
         )
      </if>
      <if test="category != null">
        and RES.CATEGORY_ = #{category}
      </if>
      <if test="categoryLike != null">
        and RES.CATEGORY_ like #{categoryLike}
      </if>
      <if test="categoryNotEquals != null">
        and ( RES.CATEGORY_ &lt;&gt; #{categoryNotEquals} OR RES.CATEGORY_ is null )
      </if>
      <if test="name != null">
        and RES.NAME_ = #{name}
      </if>
      <if test="nameLike != null">
        and RES.NAME_ like #{nameLike}
      </if>
      <if test="key != null">
        and RES.KEY_ = #{key}
      </if>
      <if test="keyLike != null">
        and RES.KEY_ like #{keyLike}
      </if>
      <if test="resourceName != null">
        and RES.RESOURCE_NAME_ = #{resourceName}
      </if>
      <if test="resourceNameLike != null">
        and RES.RESOURCE_NAME_ like #{resourceNameLike}
      </if>
      <if test="version != null">
        and RES.VERSION_ = #{version}
      </if>
      <if test="deploymentId != null">
        and RES.DEPLOYMENT_ID_ = #{deploymentId}
      </if>
      <if test="latest">
        and RES.VERSION_ = (select max(VERSION_) from ${prefix}ACT_RE_PROCDEF where KEY_ = RES.KEY_ 
             <if test="tenantId != null">
	           and TENANT_ID_ = #{tenantId}
	         </if>
	         <if test="tenantIdLike != null">
	           and TENANT_ID_ like #{tenantIdLike}
	         </if>
	         <if test="withoutTenantId">
	           and (TENANT_ID_ = '' or TENANT_ID_ is null)
	         </if>
        )
      </if>
      <if test="suspensionState != null">
        and (RES.SUSPENSION_STATE_ = #{suspensionState.stateCode})
      </if>
       <if test="tenantId != null">
        and RES.TENANT_ID_ = #{tenantId}
      </if>
      <if test="tenantIdLike != null">
        and RES.TENANT_ID_ like #{tenantIdLike}
      </if>
      <if test="withoutTenantId">
        and (RES.TENANT_ID_ = '' or RES.TENANT_ID_ is null)
      </if>
      <if test="eventSubscriptionType != null">
      	and (EVT.EVENT_TYPE_ = #{eventSubscriptionType} and EVT.EVENT_NAME_ = #{eventSubscriptionName}) 
      </if>
      <if test="authorizationUserId != null">
        AND (exists (select ID_  from ${prefix}ACT_RU_IDENTITYLINK  IDN where IDN.PROC_DEF_ID_ = RES.ID_ and IDN.USER_ID_ = #{authorizationUserId})
        <if test="authorizationGroups != null &amp;&amp; authorizationGroups.size() &gt; 0">
         OR exists (select ID_ from ${prefix}ACT_RU_IDENTITYLINK  IDN where IDN.PROC_DEF_ID_ = RES.ID_ and IDN.GROUP_ID_ IN
            <foreach item="group" index="index" collection="authorizationGroups" 
                     open="(" separator="," close=")">
              #{group}
            </foreach>
         )
         </if>
        )
      </if>
    </where>
  </sql>
    
  <!-- mysql specific sql -->
  <select id="bpmSelectProcessDefinitionsByQueryCriteria_mysql" parameterType="com.yonyou.bpm.engine.impl.BpmProcessDefinitionQueryImpl" resultMap="bpmprocessDefinitionResultMap">
  	${limitBefore}
    select distinct RES.* ${limitBetween}
    <include refid="bpmSelectProcessDefinitionsByQueryCriteriaSql"/>
    ${orderBy}
    ${limitAfter}
  </select>

  <!-- mysql specific sql -->
  <select id="bpmSelectProcessDefinitionCountByQueryCriteria_mysql" parameterType="com.yonyou.bpm.engine.impl.BpmProcessDefinitionQueryImpl" resultType="long">
    select distinct count(RES.ID_)
    <include refid="bpmSelectProcessDefinitionsByQueryCriteriaSql"/>
  </select>
</mapper>